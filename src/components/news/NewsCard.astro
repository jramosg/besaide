---
import type { CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';
import { slugify } from '@/utils/string';
import { formatDate } from '@/i18n/utils';
import { getLangFromUrl, useTranslations } from 'i18n/utils';
import { Share2, ArrowRight } from '@lucide/astro';
import { ArrowRightIcon } from '@lucide/astro';

type Item = CollectionEntry<'news'> & {
	processedImage: string | ImageMetadata;
	slug: string;
};

type Props = {
	item: Item;
};
const { item }: Props = Astro.props;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const slug = slugify(item.id);
---

<article class="card card--elevated news-card">
	<a href={item.slug} class="news-card__link">
		<div class="news-card__image">
			{
				typeof item.processedImage === 'string' ? (
					<img
						src={item.processedImage}
						alt={item.data.imageAlt || item.data.title}
						style={`view-transition-name: image-${slug}`}
					/>
				) : (
					<Image
						src={item.processedImage}
						style={`view-transition-name: image-${slug}`}
						alt={item.data.imageAlt || item.data.title}
					/>
				)
			}
		</div>

		<div class="news-card__content">
			<h3
				class="news-card__title"
				style={`view-transition-name: title-${slug}`}
			>
				{item.data.title}
			</h3>
			<time
				class="news-card__date"
				style={`view-transition-name: date-${slug}`}
			>
				{formatDate(item.data.date)}
			</time>
			<p class="news-card__summary">{item.data.summary}</p>

			<div class="news-card__footer">
				<button class="news-card__share" aria-label={t('Partekatu')}>
					<Share2  />
				</button>
				<div class="news-card__more">
					{t('Informazio gehiago')}
					<ArrowRight/>
                </div>
			</div>
		</div>
	</a>
</article>

<style>
	.news-card {
		/* Figma base: 421.33 x 455px */
		max-width: 421px;
		width: 100%;
		overflow: hidden;
	}

	.news-card__link {
		display: flex;
		flex-direction: column;
		text-decoration: none;
		color: inherit;
		height: 100%;
	}

	.news-card__image {
		/* Figma: 421.33 x 195px with top border radius */
		width: 100%;
		height: 195px;
		overflow: hidden;
		border-top-left-radius: var(--theme-shape-radius);
		border-top-right-radius: var(--theme-shape-radius);
	}

	.news-card__image img {
		width: 100%;
		height: 100%;
		object-fit: cover;
		transition: transform 0.3s ease;
	}

	.news-card:hover .news-card__image img {
		transform: scale(1.05);
	}

	.news-card__content {
		padding: var(--s4);
		display: flex;
		flex-direction: column;
		gap: 10px;
		flex: 1;
	}

	.news-card__title {
		font-size: var(--font-size-md);
		margin: 0;
		font-weight: var(--font-weight-regular);
		line-height: 1.3;
		/* Truncate to 2 lines */
		display: -webkit-box;
		-webkit-line-clamp: 2;
		-webkit-box-orient: vertical;
		overflow: hidden;
		text-overflow: ellipsis;
	}

	.news-card__date {
		font-size: var(--font-size-sm);
		color: var(--theme-text-secondary);
		font-weight: var(--font-weight-regular);
	}

	.news-card__summary {
		/* Figma: 401.33 x 64px */
		margin: 0;
		/* Truncate to 3 lines to fit ~64px height */
		display: -webkit-box;
		-webkit-line-clamp: 3;
		-webkit-box-orient: vertical;
		overflow: hidden;
		text-overflow: ellipsis;
		max-height: 64px;
	}

	.news-card__footer {
		display: flex;
		justify-content: space-between;
		align-items: center;
		margin-top: auto;
		padding-top: var(--s2);
	}

	.news-card__share {
		background: none;
		border: none;
		cursor: pointer;
		padding: var(--s2);
		color: var(--theme-text-secondary);
		transition: color 0.2s ease;
		display: flex;
		align-items: center;
		justify-content: center;
		border-radius: 50%;
	}

	.news-card__share:hover {
		color: var(--theme-primary);
		background-color: var(--theme-primary-hover-bg);
	}

	.news-card__more {
		font-size: var(--font-size-sm);
		color: var(--theme-primary);
		font-weight: 600;
		display: flex;
		align-items: center;
		gap: var(--s2);
		transition: gap 0.3s ease;
	}

	.news-card:hover .news-card__more {
		gap: var(--s3);
	}

	.news-card__more svg {
		transition: transform 0.3s ease;
	}

	.news-card:hover .news-card__more svg {
		transform: translateX(4px);
	}

	/* Responsive adjustments */
	@media (max-width: 768px) {
		.news-card {
			max-width: 100%;
		}

		.news-card__image {
			height: 180px;
		}
	}
</style>

<script>
	import { toast } from '@/utils/toast';

	document.addEventListener('astro:page-load', () => {
		const shareButtons = Array.from(
			document.querySelectorAll('.news-card__share')
		);
		shareButtons.forEach(btn => {
			btn.addEventListener('click', async event => {
				event.preventDefault();
				event.stopPropagation();
				// Find the closest card anchor to get the URL and title
				const anchor = btn.closest('a');
				const url = anchor ? anchor.href : window.location.href;
				const titleEl = anchor ? anchor.querySelector('h3') : null;
				const title = titleEl ? titleEl.textContent.trim() : document.title;
				const subText = anchor
					? anchor.querySelector('p')?.textContent.trim() || ''
					: '';
				const text = title + (subText.length > 0 ? ' - ' + subText : '');

				const shareData = { title, text, url };

				const copyToClipboard = async () => {
					console.log('Copying to clipboard:', url);
					/* if (!navigator.clipboard) {
						toast.error('Ezin da kopiatu, ez dago clipboard API-rik');
						return;
					} */
					const clipboardItem = new ClipboardItem({ ['text/plain']: url });
					await navigator.clipboard.write([clipboardItem]);
					toast.success('Linka kopiatu da!');
				};

				if (!navigator.canShare) {
					await copyToClipboard();
					return;
				}
				if (!navigator.canShare(shareData)) {
					await copyToClipboard();

					return;
				}
				navigator
					.share(shareData)
					.then(() => console.log('Successful share'))
					.catch(e => console.error('Error: ' + e));
			});
		});
	});
</script>
