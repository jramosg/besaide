---
import { formatDate, getLangFromUrl, getUrlFromID } from '@/i18n/utils';
import { sortedAndFilteredEvents } from '@/staticPathsHelper';
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import type { ImageMetadata } from 'astro';
import UdalaitzImg from '@/assets/udalaitz.webp';
import { slugify } from '@/utils/string';
import Button from './buttons/Button.astro';

const lang = getLangFromUrl(Astro.url);
let events: CollectionEntry<'events'>[] = await sortedAndFilteredEvents(lang);

// Filter future events and limit to 4
const today = new Date();
events = events.filter(event => new Date(event.data.date) >= today).slice(0, 4);

const agendaSection = getUrlFromID('agenda', lang);

const images = import.meta.glob<{ default: ImageMetadata }>(
	'/src/assets/*.{jpeg,jpg,png,gif,webp}'
);

type Difficulty = 'erraza' | 'ertaina' | 'zaila';

const difficultyLabels: Record<'eu' | 'es', Record<Difficulty, string>> = {
	eu: {
		erraza: 'Erraza',
		ertaina: 'Ertaina',
		zaila: 'Zaila'
	},
	es: {
		erraza: 'F√°cil',
		ertaina: 'Media',
		zaila: 'Dif√≠cil'
	}
};

const processedEvents = await Promise.all(
	events.map(async item => {
		let processedImage: ImageMetadata | string = UdalaitzImg;

		if (item.data.image) {
			if (item.data.image.startsWith('@/assets/')) {
				const imagePath = item.data.image.replace('@/', 'src/');
				const fullPath = `/${imagePath}`;
				try {
					if (images[fullPath]) {
						processedImage = (await images[fullPath]()).default;
					}
				} catch (error) {
					console.warn(`Could not import image: ${item.data.image}`, error);
				}
			}
		}

		return {
			...item,
			processedImage,
			slug: `${agendaSection}/${slugify(item.id)}`
		};
	})
);
---

<section class="agenda-section" id="agenda">
	<div class="content__container">
		<div class="section-header">
			<h2>üèîÔ∏è Hurrengo Irteerak</h2>
			<p>
				Euskal mendietara eta Pirinioetara antolatutako txangoak eta mendiko
				jarduerak
			</p>
		</div>

		<div class="events-grid">
			{
				processedEvents.map(item => {
					const eventDate = new Date(item.data.date);
					const dayOfWeek = eventDate.toLocaleDateString(
						lang === 'eu' ? 'eu-ES' : 'es-ES',
						{ weekday: 'short' }
					);
					const day = eventDate.getDate();
					const month = eventDate.toLocaleDateString(
						lang === 'eu' ? 'eu-ES' : 'es-ES',
						{ month: 'short' }
					);

					const difficultyColor =
						item.data.difficulty === 'erraza'
							? 'green'
							: item.data.difficulty === 'ertaina'
								? 'orange'
								: 'red';

					return (
						<a href={item.slug} class="event-card">
							<div class="event-image-container">
								{typeof item.processedImage === 'string' ? (
									<img
										src={item.processedImage}
										alt={item.data.imageAlt || item.data.title}
										class="event-image"
										style={`view-transition-name: image-${slugify(item.id)}`}
									/>
								) : (
									<Image
										src={item.processedImage}
										alt={item.data.imageAlt || item.data.title}
										class="event-image"
										style={`view-transition-name: image-${slugify(item.id)}`}
									/>
								)}
								<div class="event-overlay" />
								<div class="event-date-badge">
									<div class="badge-day">{day}</div>
									<div class="badge-month">{month}</div>
								</div>
								{item.data.featured && (
									<div class="featured-badge">‚≠ê Destacado</div>
								)}
							</div>

							<div class="event-content">
								<div class="event-meta">
									<span class={`difficulty-badge ${difficultyColor}`}>
										{difficultyLabels[lang][item.data.difficulty as Difficulty]}
									</span>
									<span class="region-badge">
										{item.data.region === 'euskal-mendiak'
											? 'üèîÔ∏è Euskal Herria'
											: '‚õ∞Ô∏è Pirineoak'}
									</span>
								</div>

								<h3>{item.data.title}</h3>
								<p class="event-mountain">üìç {item.data.mountain}</p>
								<p class="event-summary">{item.data.summary}</p>

								<div class="event-details-grid">
									{item.data.distance && (
										<div class="detail-item">
											<span class="detail-icon">üìè</span>
											<span class="detail-text">{item.data.distance}</span>
										</div>
									)}
									{item.data.elevation && (
										<div class="detail-item">
											<span class="detail-icon">‚¨ÜÔ∏è</span>
											<span class="detail-text">{item.data.elevation}</span>
										</div>
									)}
									{item.data.duration && (
										<div class="detail-item">
											<span class="detail-icon">‚è±Ô∏è</span>
											<span class="detail-text">{item.data.duration}</span>
										</div>
									)}
								</div>

								<div class="event-cta">
									<span class="cta-text">Informazio gehiago ‚Üí</span>
								</div>
							</div>
						</a>
					);
				})
			}
		</div>

		<div class="agenda-footer">
			<Button outlined href={getUrlFromID('agenda', lang)}
				>Agenda osoa ikusi</Button
			>
		</div>
	</div>
</section>

<style>
	.agenda-section {
		padding: 5rem 0;
		background: linear-gradient(135deg, #f8fafb 0%, #f0f4f7 100%);
	}

	.section-header {
		text-align: center;
		margin-bottom: 4rem;
	}

	.section-header h2 {
		font-size: 2.5rem;
		font-weight: 700;
		margin-bottom: 1rem;
		background: linear-gradient(135deg, #2d5a3d 0%, #1a472a 100%);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-clip: text;
	}

	.section-header p {
		font-size: 1.1rem;
		color: var(--theme-text-secondary);
		max-width: 700px;
		margin: 0 auto;
	}

	.events-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
		gap: 2rem;
		margin-bottom: 3rem;
	}

	.event-card {
		background: white;
		border-radius: 16px;
		overflow: hidden;
		text-decoration: none;
		box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
		transition: all 0.3s ease;
		display: flex;
		flex-direction: column;
		position: relative;
	}

	.event-card:hover {
		transform: translateY(-8px);
		box-shadow: 0 12px 40px rgba(45, 90, 61, 0.15);
	}

	.event-image-container {
		position: relative;
		height: 240px;
		overflow: hidden;
	}

	.event-image {
		width: 100%;
		height: 100%;
		object-fit: cover;
		transition: transform 0.5s ease;
	}

	.event-card:hover .event-image {
		transform: scale(1.1);
	}

	.event-overlay {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: linear-gradient(
			to bottom,
			rgba(0, 0, 0, 0.1) 0%,
			rgba(0, 0, 0, 0.3) 100%
		);
	}

	.event-date-badge {
		position: absolute;
		top: 1rem;
		left: 1rem;
		background: white;
		border-radius: 12px;
		padding: 0.75rem;
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
		text-align: center;
		z-index: 2;
	}

	.badge-day {
		font-size: 1.5rem;
		font-weight: 700;
		color: var(--theme-primary);
		line-height: 1;
	}

	.badge-month {
		font-size: 0.75rem;
		font-weight: 600;
		color: var(--theme-text-secondary);
		text-transform: uppercase;
		margin-top: 0.25rem;
	}

	.featured-badge {
		position: absolute;
		top: 1rem;
		right: 1rem;
		background: linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%);
		color: white;
		padding: 0.5rem 1rem;
		border-radius: 20px;
		font-size: 0.8rem;
		font-weight: 600;
		box-shadow: 0 4px 12px rgba(251, 191, 36, 0.3);
		z-index: 2;
	}

	.event-content {
		padding: 1.5rem;
		flex: 1;
		display: flex;
		flex-direction: column;
	}

	.event-meta {
		display: flex;
		gap: 0.5rem;
		margin-bottom: 1rem;
		flex-wrap: wrap;
	}

	.difficulty-badge,
	.region-badge {
		padding: 0.375rem 0.75rem;
		border-radius: 20px;
		font-size: 0.75rem;
		font-weight: 600;
		text-transform: uppercase;
		letter-spacing: 0.5px;
	}

	.difficulty-badge.green {
		background: #d1fae5;
		color: #065f46;
	}

	.difficulty-badge.orange {
		background: #fed7aa;
		color: #92400e;
	}

	.difficulty-badge.red {
		background: #fecaca;
		color: #991b1b;
	}

	.region-badge {
		background: #dbeafe;
		color: #1e40af;
	}

	.event-content h3 {
		font-size: 1.3rem;
		font-weight: 700;
		color: var(--theme-text);
		margin-bottom: 0.5rem;
		line-height: 1.3;
	}

	.event-mountain {
		font-size: 0.95rem;
		font-weight: 600;
		color: var(--theme-primary);
		margin-bottom: 0.75rem;
	}

	.event-summary {
		color: var(--theme-text-secondary);
		line-height: 1.6;
		margin-bottom: 1rem;
		flex: 1;
		font-size: 0.9rem;
	}

	.event-details-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));
		gap: 0.75rem;
		margin-bottom: 1rem;
		padding-top: 1rem;
		border-top: 1px solid #e5e7eb;
	}

	.detail-item {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 0.25rem;
	}

	.detail-icon {
		font-size: 1.25rem;
	}

	.detail-text {
		font-size: 0.8rem;
		font-weight: 600;
		color: var(--theme-text-secondary);
		text-align: center;
	}

	.event-cta {
		display: flex;
		align-items: center;
		justify-content: space-between;
		padding-top: 1rem;
		border-top: 1px solid #e5e7eb;
	}

	.cta-text {
		color: var(--theme-primary);
		font-weight: 700;
		font-size: 0.9rem;
		transition: all 0.3s ease;
	}

	.event-card:hover .cta-text {
		transform: translateX(4px);
	}

	.agenda-footer {
		text-align: center;
		margin-top: 2rem;
	}

	@media (max-width: 768px) {
		.section-header h2 {
			font-size: 2rem;
		}

		.events-grid {
			grid-template-columns: 1fr;
			gap: 1.5rem;
		}

		.event-image-container {
			height: 200px;
		}
	}

	@media (max-width: 480px) {
		.agenda-section {
			padding: 3rem 0;
		}

		.section-header h2 {
			font-size: 1.75rem;
		}

		.event-content {
			padding: 1.25rem;
		}

		.event-content h3 {
			font-size: 1.15rem;
		}
	}
</style>
