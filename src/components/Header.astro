---
import Burger from 'components/buttons/Burger.astro';
import { nav, type Nav } from 'config/nav';
import {
	getLangFromUrl,
	useTranslations,
	getUrlFromID,
	getIdfromUrl
} from 'i18n/utils';
import LanguageToggle from 'components/LanguageToggle.astro';
import ThemeSwitcher from 'components/theme-switcher/ThemeSwitcher.astro';
import Button from '@/components/buttons/Button.astro';

type Props = {
	navData: Nav;
	rightMenu?: boolean;
	transparent?: boolean;
};
const { navData, rightMenu, transparent }: Props = Astro.props;

const url = Astro.url;
const lang = getLangFromUrl(url);
const t = useTranslations(lang);

const currentPageId = getIdfromUrl(url);
const headerClasses = [
	rightMenu && 'header--right',
	transparent && 'header--transparent'
]
	.filter(Boolean)
	.join(' ');
---

<header id="besaideHeader" class={headerClasses}>
	<div class="header-toggles__container">
		<ThemeSwitcher />
		<LanguageToggle />
	</div>
	<div class="header-logo-menu__container">
		<a
			class="header-logo__link"
			aria-label={t('Orri nagusira joan')}
			href={`/${lang}`}
		>
			<slot name="logo" />
		</a>
	</div>

	<div class="header-nav__container">
		<nav>
			<ul>
				{
					navData.map(navItem => {
						const isActive = navItem.slug === currentPageId;
						return (
							<li class="header-nav__item">
								<a
									class={isActive ? 'nav-link--active' : ''}
									href={getUrlFromID(navItem.slug, lang)}
								>
									{t(navItem.title)}
								</a>
							</li>
						);
					})
				}
			</ul>
		</nav>
	</div>
	<div class="header-action-item__container">
		<Burger
			id="menuButton"
			aria-label={t('Menua ireki')}
			data-open-label={t('Menua ireki')}
			data-close-label={t('Menua itxi')}
			navData={nav}
		/>
		<Button outlined>{t('Bazkidetza / Federatzea')}</Button>
		<Button>{t('Kontaktua')}</Button>
	</div>
</header>

<style>
	header {
		--transition-transform: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
		--transition-height: height 0.3s cubic-bezier(0.4, 0, 0.2, 1);
		--horizontal-padding: var(--s6);
		width: 100%;
		height: var(--header-height);
		display: grid;
		grid-template-columns: auto 1fr auto;
		align-items: center;
		position: fixed;
		align-items: center;
		top: 0;
		z-index: 200;
		transition:
			var(--transition-height),
			var(--transition-transform),
			padding-top 0.3s cubic-bezier(0.4, 0, 0.2, 1);
		background-color: var(--theme-bg);
	}
	.header-toggles__container {
		grid-column: span 3 / span 3;
		display: flex;
		justify-content: end;
		align-items: center;
		border-bottom: 1px solid var(--theme-outline);
		height: var(--header-toggles-height);
		opacity: 1;
		gap: var(--s4);
		transform: translateY(0);
		transition:
			var(--transition-height),
			opacity 0.25s ease-in,
			var(--transition-transform);
		padding: 0 var(--horizontal-padding);
	}

	header.header--transparent {
		background-color: color-mix(in srgb, var(--theme-bg) 60%, transparent);
		backdrop-filter: blur(10px);
	}

	header.header-nav__container--scrolling-down {
		height: var(--header-content-height);
		.header-toggles__container {
			height: 0;
			opacity: 0;
			overflow: hidden;
			transform: translateY(-100%);
		}
	}
	header.header--right {
		display: grid;
		grid-template-columns: 1fr auto auto auto;
	}
	.header-logo__link {
		width: fit-content;
		color: inherit;
		text-decoration: none;

		padding-left: var(--horizontal-padding);
		svg {
			width: var(--s10);
		}
	}

	.header-nav__container {
		display: flex;
		justify-content: center;
	}
	.header-logo-menu__container {
		display: flex;
		align-items: center;
		height: 100%;
	}

	.header-action-item__container {
		display: flex;
		gap: var(--s2);
		align-items: center;
		height: 100%;
	}
	.header-nav__container--scrolled {
		box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
		margin-top: 0;
		opacity: 0.9;
		background-color: transparent;
	}

	header[drawer-open] {
		background-color: transparent;
		z-index: 1211;
		backdrop-filter: none;
		opacity: 1;
		box-shadow: unset;
		.language-toggle,
		.header-logo-menu__container {
			opacity: 0;
		}
	}

	nav {
		display: flex;
	}
	nav ul {
		margin: 0;
		padding: 0;
		list-style: none;
		display: flex;
	}
	nav ul li:not(.landing-menu-item) a {
		text-decoration: none;
		margin-right: 1rem;
		font-weight: var(--font-weight-medium);
		transition: opacity linear 150ms;
	}
	nav ul li a:hover {
		opacity: 0.8;
	}

	.language-select__container {
		z-index: 100;
		transition: opacity 0.3s ease-in-out;
	}

	.nav-link--active {
		border-bottom: 2px solid var(--theme-primary);
	}

	.header-action-item__container {
		padding-right: var(--horizontal-padding);
	}

	/* Mobile styles */
	@media (max-width: 768px) {
		header {
			padding: 0 var(--s2);
		}
		.header-nav__container {
			display: none;
		}

		.header-action-item__container button {
			display: none;
			&#menuButton {
				display: flex;
			}
		}
	}

	.menu-overlay {
		position: fixed;
		inset: 0;
		z-index: 1000;
		background: var(--theme-primary);
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		overflow: hidden;
		opacity: 0;
		pointer-events: none;
		transition:
			opacity 0.3s cubic-bezier(0.4, 2, 0.6, 1),
			transform 0.4s cubic-bezier(0.4, 2, 0.6, 1);
		transform: translateX(100vw); /* Start off-screen right */
	}
	.menu-overlay.open {
		opacity: 1;
		pointer-events: auto;
		transform: translateX(0);
	}

	.landing-menu-nav ul {
		list-style: none;
		padding: 0;
		margin: 0;
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: var(--s5);
	}

	.landing-menu-item {
		opacity: 0;
		transform: translateY(40px) scale(0.95);
		transition:
			opacity 0.4s cubic-bezier(0.4, 2, 0.6, 1),
			transform 0.4s cubic-bezier(0.4, 2, 0.6, 1);
	}
	.menu-overlay.open .landing-menu-item {
		opacity: 1;
		transform: translateY(0) scale(1);
	}

	.landing-menu-item a {
		font-size: var(--font-size-lg);
		color: var(--theme-on-primary, #fff);
		text-decoration: none;
		font-weight: 700;
		letter-spacing: 0.08em;
		transition: color 0.2s;
	}

	.landing-menu-item a:hover {
		color: var(--theme-secondary, #e8944a);
		text-shadow:
			0 2px 32px #e8944a,
			0 0 2px #fff;
	}

	.logo-menu-item {
		display: flex;
		justify-content: center;
		align-items: center;
		margin-bottom: var(--s5);
		/* Inherit menu item animation */
		opacity: 0;
		transform: translateY(40px) scale(0.95);
		transition:
			opacity 0.4s cubic-bezier(0.4, 2, 0.6, 1),
			transform 0.4s cubic-bezier(0.4, 2, 0.6, 1);
		position: absolute;
		top: var(--s6);
	}
	.menu-overlay.open .logo-menu-item {
		opacity: 1;
		transform: translateY(0) scale(1);
	}
</style>

<script>
	const SCROLL_THRESHOLD = 60;
	const HEADER_ID = 'besaideHeader';
	const MOBILE_MENU_ID = 'mobile-menu';
	const LANG_TOGGLE_BTN_ID = 'lang-toggle-btn';
	const LANG_DROPDOWN_ID = 'lang-dropdown';

	const CSS_CLASSES = {
		SCROLLED: 'header-nav__container--scrolled',
		SCROLLING_DOWN: 'header-nav__container--scrolling-down'
	} as const;

	document.addEventListener('astro:page-load', () => {
		const navHeader = document.getElementById(HEADER_ID);
		const mobileMenu = document.getElementById(MOBILE_MENU_ID);
		const langToggleBtn = document.getElementById(LANG_TOGGLE_BTN_ID);
		const dropdown = document.getElementById(LANG_DROPDOWN_ID);

		if (!navHeader) return;

		let lastScrollY = window.scrollY;
		let ticking = false;

		const closeDropdown = () => {
			if (!dropdown || !langToggleBtn) return;
			dropdown.hidden = true;
			langToggleBtn.setAttribute('aria-expanded', 'false');
		};

		const handleScroll = () => {
			const currentScrollY = window.scrollY;

			// Hide dropdown on scroll
			if (
				dropdown &&
				langToggleBtn &&
				currentScrollY > SCROLL_THRESHOLD &&
				!dropdown.hidden
			) {
				closeDropdown();
				langToggleBtn.blur();
			}

			// Prevent scroll logic if mobile menu is open
			if (mobileMenu?.hasAttribute('open')) {
				navHeader.classList.remove(CSS_CLASSES.SCROLLING_DOWN);
				return;
			}

			// Header hide/show based on scroll direction
			if (currentScrollY < SCROLL_THRESHOLD) {
				navHeader.classList.remove(CSS_CLASSES.SCROLLED);
			} else {
				navHeader.classList.add(CSS_CLASSES.SCROLLED);

				if (currentScrollY > lastScrollY) {
					navHeader.classList.add(CSS_CLASSES.SCROLLING_DOWN);
				} else {
					navHeader.classList.remove(CSS_CLASSES.SCROLLING_DOWN);
				}
			}

			lastScrollY = currentScrollY;
			ticking = false;
		};

		const onScrollHandler = () => {
			if (!ticking) {
				window.requestAnimationFrame(handleScroll);
				ticking = true;
			}
		};

		window.addEventListener('scroll', onScrollHandler);
	});
</script>
